c
@current_user
exit
user.valid_password?(password)
user.valid_passworw?(password)
c
User.find_by_email(email)
c
exit
password
email
c
   19:     )
   18:       params[:password]
   17:       params[:email],
User.find_by_credentials(
User.find_by_email("test@test.com
params
c
diffs.map { |diff| diff[0] }
exit
diffs.map { |diff| diff[0] }
diffs
exit
time
res.time_slot.time
res.time_slot
c
cc
c
reservations_after
reservations_before
exit
id
is
reservations_after
reservations_before
exit
reservations_after
reservations_before
exit
id
reservations_before
sum_of_reservations_before
exit
)exit
  head_count: 2
  time_id: 5,
  date: "2016-01-30",
  restaurant_id: 26,
  user_id: 1,
r = Reservation.new(
filters[:time]
TimeSlot.find(5)
search_start
start_time
results
c
exit
TimeSlot.find_by_time(615)
time
TimeSlot.find_by_time(time)
time
exit
filters[:time]
results
exit
results
exit
filters[:date]
exit
params[:filters]
c
params
c
exit
reload!
self.restaurant
self.time_slot
self.time_slot.includes(:restaurant)
self.includes(:time_slot, :restaurant, :user)
self.time_slot
self
c
errors
errors[:stuff] = "glitter"
errors
